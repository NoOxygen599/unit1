color black = #000000;
color white = #ffffff;
color yellow = #E8CB3B;
color[] red_colors = {#F54346, #BC191B, #7E1315, #954142, #FF2C2F };
color[] blue_colors = {#0039FF, #6687F7, #106FAD, #386DF0, #54ADBC };
color grey = #838383;
color darkgrey = #4D4D4D;
color yollow = #FFB62E;
void setup() {
  size (1000, 600);
  background (black);
  stars(600);
  planetstroids(15);
  spaceships (50, 50);
  planetstroids(4);
  
}

//----------------------------------------------------------------------------------------------------
void stars(int n) {
  int count = 0;
  while (count < n) {
    float s;
    if ( count < n*0.9) {
      s = random(0.01, 0.04);  // small stars 
    }
    else {
      s = random(0.05, 0.08);  // big stars 
    }
    //float s = count < 800 ? random(0.01, 0.04) :  random(0.05, 0.08);
    star(random(0, width), random(0, height), s);
    count = count + 1;
  }
}
//---------------------------------------------------------------------------------------------------------
void star(float x, float y, float s) {
  pushMatrix();
  translate (x, y);
  scale(s);

  stroke(white);
  fill(white);

  for (int i = 0; i < 8; i++) {
    rotate(PI/4);
    triangle(-25, 0, 25, 0, 0, 75);
  }
  
 popMatrix();
 
}
//-----------------------------------------------------------------------------------------------------------
void spaceships(int nr, int nb) {
  for (int i =0; i < nr; i++) {
    float s = i < nr - 4 ? random(0.06, 0.2) : random(0.4, 1);
    float x = i < nr - 4 ? random(width/2.2, width) : random(width/1.7, width);
    red_spaceship(x, random(0, height), s);
  }
  for (int i =0; i < nb; i++) {
    float s = i < nb - 4 ? random(0.06, 0.2) : random(0.4, 1);
    float x = i < nb - 4 ? random(0, width/1.8) : random(0, width/2.3);
    blue_spaceship(x, random(0, height), s);
  }
  
}
//----------------------------------------------------------------------------------------------------
void red_spaceship(float x, float y, float s) {
  color r1 = red_colors[int (random(0, red_colors.length)-1)];
  color r2 = red_colors[int (random(0, red_colors.length)-1)];
  color r3 = red_colors[int (random(0, red_colors.length)-1)];
  spaceship(x, y, s, r1, r2, r3, false); 
}

//-----------------------------------------------------------------------------------------------------
void blue_spaceship(float x, float y, float s) {
  color b1 = blue_colors[int (random(0, blue_colors.length)-1)];
  color b2 = blue_colors[int (random(0, blue_colors.length)-1)];
  color b3 = blue_colors[int (random(0, blue_colors.length)-1)];
  spaceship(x, y, s, b1, b2, b3, true); 
}

//-----------------------------------------------------------------------------------------------------
void wings(color c) {
  // draw wings
  float r = random(20, 70);
  fill(c);
  triangle(-50, -15, 55, -15, r, -65);
  triangle(-50,  15, 55,  15, r,  65);
}
//-------------------------------------------------------------------------------------------------------
void spaceship(float x, float y, float s, color c1, color c2, color c3, boolean l2r) {
  pushMatrix();
  translate (x, y);
  scale(s);
  strokeWeight(0.4);
  stroke(0);

  // draw left to right?
  if ( l2r ) {
    rotate(PI);
  }
  rotate(random(-PI/7, PI/7));
  
  // draw engines
  // draw body
  fill(c2);
  rect(0, -15, 50, 30);
  fill(c1);
  rect(20, 15, 48, 23);
  rect(20, -15, 48, -23);
  
  //wings
  wings(c3);
  
  // draw cockpit
  fill(yellow);
  triangle(25, 0, 0, -5, 0, 5);
  
  if (random(1, 100) > 50) {
    lazer(-20, 0, c1);
  }
    
  popMatrix();
}
//----------------------------------------------------------------
void lazer(float x, float y, color c) {
 
  
 float pr = random(40, 170);
 pushMatrix();
 stroke(yollow);
 strokeWeight(4);
 translate(x, y);

 //for (int i = 0; i < int(pr/10); i=i+40) {
 int i=0;
 while ( i < pr){
   println(i);
   line(-i, 0, -i-10, 0);
   i = i+20;
 } 
 stroke(c);
 strokeWeight(2);
 //fill(255);
 rect(-i - 30, -3, 30, 6);

 popMatrix();
  
}
//------------------------------------------------------
void planetstroids(int n) {
  int count = 0;
  while (count < n) {
    float s = random(0.01, 1.1);  
    planetstroid(random(0, width), random(0, height), s);
    count = count + 1;
  }
}
//-----------------------------------------------------
void planetstroid(float x, float y, float s) {
  pushMatrix();
  translate(x, y);
  scale(s);
  rotate(random(-PI*2, PI/2));
  strokeWeight(1);
  stroke(darkgrey);
  fill(grey);
  circle(0, 0, 50);
  fill(darkgrey);
  circle(3, 14, 20);
  ellipse(-10, -10, 10, 20);
  circle(-15, 13, 10);
  ellipse(3, -15, 13, 10);
  circle(16, 0, 15);
    
  popMatrix();  
}





