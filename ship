color black = #000000;
color white = #ffffff;
color yellow = #E8CB3B;
color[] red_colors = {#F54346, #BC191B, #7E1315, #954142, #FF2C2F };
color[] blue_colors = {#0039FF, #6687F7, #106FAD, #386DF0, #54ADBC };


void setup() {
  size (1000, 600);
  background (black);
  stars();
  spaceships (50, 50);
}






void draw () {
  
}




void stars() {
   int count = 0;
  while (count < 950) {
    float s;
    if ( count < 800) {
      s = random(0.01, 0.04);
    }
    else {
      s = random(0.05, 0.08);
    }
    //float s = count < 800 ? random(0.01, 0.04) :  random(0.05, 0.08);
    star(random(0, width), random(0, height), s);
    count = count + 1;
  }
}


void spaceships(int nr, int nb) {
  for (int i =0; i < nr; i++) {
    float s = i < nr - 4 ? random(0.06, 0.2) : random(0.4, 1);
    red_spaceship(random(width/2, width), random(0, height), s);
  }
  for (int i =0; i < nb; i++) {
    float s = i < nb - 4 ? random(0.06, 0.2) : random(0.4, 1);
    blue_spaceship(random(0, width/2), random(0, height), s);
  }
  
}

void red_spaceship(float x, float y, float s) {
  color r1 = red_colors[int (random(0, red_colors.length)-1)];
  color r2 = red_colors[int (random(0, red_colors.length)-1)];
  color r3 = red_colors[int (random(0, red_colors.length)-1)];
  spaceship(x, y, s, r1, r2, r3, false); 
}


void blue_spaceship(float x, float y, float s) {
  color b1 = blue_colors[int (random(0, blue_colors.length)-1)];
  color b2 = blue_colors[int (random(0, blue_colors.length)-1)];
  color b3 = blue_colors[int (random(0, blue_colors.length)-1)];
  spaceship(x, y, s, b1, b2, b3, true); 
}




void spaceship(float x, float y, float s, color c1, color c2, color c3, boolean l2r) {
  pushMatrix();
  translate (x, y);
  scale(s);
  if ( l2r ) {
    rotate(PI);
  }
  strokeWeight(0.4);
  stroke(0);
  fill(c1);
  rect(50, 26, 10, 23);
  rect(50, -26, 10, -23);
  //rect(
  fill(c2);
  rect(0, -15, 50, 30);
  fill(c3);
  triangle(55, -15, 50, -65, -50, -15);
  triangle(-50, 15, 55, 15, 50, 65);
  fill(yellow);
  triangle(25, 0, 0, -5, 0, 5);
 
  
  popMatrix();
  
}


void star(float x, float y, float s) {
  pushMatrix();
  translate (x, y);
  scale(s);

  stroke(white);
  fill(white);
  
  rotate(PI/4);
  triangle(-25, 0, 25, 0, 0, 75);
  rotate(PI/4);
  triangle(-25, 0, 25, 0, 0, 75);
  rotate(PI/4);
  triangle(-25, 0, 25, 0, 0, 75);
  rotate(PI/4);
  triangle(-25, 0, 25, 0, 0, 75);
  rotate(PI/4);
  triangle(-25, 0, 25, 0, 0, 75);
  rotate(PI/4);
  triangle(-25, 0, 25, 0, 0, 75);
  rotate(PI/4);
  triangle(-25, 0, 25, 0, 0, 75);
  rotate(PI/4);
  triangle(-25, 0, 25, 0, 0, 75);
 
 
 popMatrix();
 
}



void point() {
  //stroke(white);
 //fill(white);
 
 //triangle(100, 150, 150, 150, 125, 220);
  
  
  
}
